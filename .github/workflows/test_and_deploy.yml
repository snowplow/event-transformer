name: Test and deploy

on: push

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run tests
        run: sbt coverage +test

      - name: Aggregate coverage data
        run: sbt coverageAggregate

      - name: Check formatting
        run: sbt scalafmtCheck

      - name: Generate API website
        if: startsWith(github.ref, 'refs/tags/')
        run: sbt makeSite

      - name: Publish to Bintray and Maven central
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PGP_PASSPHRASE: ${{ secrets.SONA_PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.SONA_PGP_SECRET }}
          SONATYPE_USERNAME: ${{ secrets.SONA_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONA_PASS }}
        run: |
          project_version=$(sbt version -Dsbt.log.noformat=true | perl -ne 'print "$1\n" if /info.*(\d+\.\d+\.\d+[^\r\n]*)/' | tail -n 1 | tr -d '\n')
          if [[ "${{ github.ref }}" = "refs/tags/${project_version}" ]]
          then
            echo Publishing to Maven Central
            sbt +publish
          else
            echo "${{ github.ref }} does not match project version $project_version => not publishing"
            exit 1
          fi

      - name: Publish website
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          project_version=$(sbt version -Dsbt.log.noformat=true | perl -ne 'print "$1\n" if /info.*(\d+\.\d+\.\d+[^\r\n]*)/' | tail -n 1 | tr -d '\n')
          if [[ "${{ github.ref }}" = "refs/tags/${project_version}" ]]
          then
            echo Publishing Scaladoc
            git fetch
            git checkout gh-pages
            cp -r target/site/* .
            git config user.name "GitHub Actions"
            git config user.email "<>"
            git add index.html $project_version
            git commit -m "Added Scaladoc for $project_version"
            git push origin gh-pages
          else
            echo "${{ github.ref }} does not match project version $project_version => not publishing"
            exit 1
          fi